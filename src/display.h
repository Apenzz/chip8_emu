#ifndef DISPLAY_H
#define DISPLAY_H

/*
	Collection of constants and functions related to the screen and drawing functionalities.

 	This implementation of the Chip-8 language uses a 64x32 pixel monochorme display with this format:
	
		------------------
		|(0,0)    (63, 0)|
		|                |
		|(0, 31) (63, 31)|
		------------------
	
	Chip-8 graphics are drawn to the screen using sprites.
	A sprite is a group of bytes which are a binary representation of an image.
	Sprites may be up to 15 bytes, for a possible maximum size of 8x15 bits.

	Programs may refer to sprites representing the hexadecimal digits 0 through F. These are 5 bytes long thus 8x5 pixels.

	The data should be stored in the memory space 0x000 to 0x1ff.
*/


/* constants definitions */

#define DISPLAY_SIZE 64*32
#define DISPLAY_WITDH 64
#define DISPLAY_HEIGHT 32


/* Font sprits for hexadecimal digits 0 through F */

const unsigned char fonts[80] = {
	0xf0, 0x90, 0x90, 0x90, 0xf0,	// 0
	0x20, 0x60, 0x20, 0x20, 0x70,	// 1
	0xf0, 0x10, 0xf0, 0x80, 0xf0,	// 2
	0xf0, 0x10, 0xf0, 0x10, 0xf0, 	// 3
	0x90, 0x90, 0xf0, 0x10, 0x10,	// 4
	0xf0, 0x80, 0xf0, 0x10, 0xf0,	// 5
	0xf0, 0x80, 0xf0, 0x90, 0xf0,	// 6
	0xf0, 0x10, 0x20, 0x40, 0x40,	// 7
	0xf0, 0x90, 0xf0, 0x90, 0xf0, 	// 8
	0xf0, 0x90, 0xf0, 0x10, 0xf0,	// 9
	0xf0, 0x90, 0xf0, 0x90, 0x90,	// A
	0xe0, 0x90, 0xe0, 0x90, 0xe0, 	// B
	0xf0, 0x80, 0x80, 0x80, 0xf0,	// C
	0xe0, 0x90, 0x90, 0x90, 0xe0,	// D
	0xf0, 0x80, 0xf0, 0x80, 0xf0,	// E
	0xf0, 0x80, 0xf0, 0x80, 0x80,	// F
};


void draw()

#endif
